openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is the Dashboard API documentation

    Additional notes:
    - Utilizing NextJS as the framework, this app's server & client are not hosted in separate docker containers.
    - Next/Auth's functions are pretty obfuscated compared to React without a framework. Instances of unauthenticated access will result in redirects to a sign-in prompt from **okta**.
    - Because OAS 3.0 does not allow Oauth (only Oauth2), security schema has been removed until then.
    - Template: Petstore OAS 3.0 from [editor.swagger.io](editor.swagger.io)
    - Visualize this APIspec with the help of Arjun G's Swagger Viewer in VSCode.

    Instructions to start up app:
    - startup the server in the VSCode terminal with `docker-compose up -d`
    - click the link after starting up [http://localhost:3000](http://localhost:3000)

  version: 0.0.0
externalDocs:
  description: Check out swagger over here
  url: https://swagger.io
servers:
  - url: http://localhost:3000/api
tags:
  - name: cohorts
    description: Collections of cohorts routes
  - name: learners
    description: All on learners

paths:
  /cohort:
    get:
      tags:
        - cohorts
      summary: Retrieve a list of cohorts
      description: Retrieve a list of cohorts, with each item containing an id and name
      operationId: cohort
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: "#/components/schemas/cohort"
  /cohort/{id}:
    get:
      tags:
        - cohorts
      summary: Retrieve a cohort according to its id
      description: Retrieve a list of learners with the same cohort, according to id
      operationId: cohotById
      parameters:
        - name: id
          in: path
          description: id of cohort
          required: true
          schema:
            type: string
            format: varchar
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: "#/components/schemas/cohort_learners"
        "404":
          description: cohort not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: "#/components/schemas/cohort_learners"
              example:
                rows: []
  /learners:
    get:
      tags:
        - learners
      summary: Retrieve a list of learners, or learner(s) queried
      description:
        Retrieve a list of learners, with a lot of things per learner within the list.
        _ You can also query for a learner(s) with a search qeury.
      operationId: learners
      parameters:
        - name: search
          in: query
          description: name of the search query
          required: false
          schema:
            type: string
            format: varchar
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: "#/components/schemas/learners"
        "404":
          description: No learners found
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: "#/components/schemas/learners"
              example:
                rows: []
  /learners/{id}:
    get:
      tags:
        - learners
      summary: Retrieve an individual learner
      description: Retrieve an individual learner by id
      operationId: learnersById
      parameters:
        - name: id
          in: path
          description: id of learner
          required: true
          schema:
            type: string
            format: varchar
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: "#/components/schemas/learners_solo"
        "404":
          description: learner not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: "#/components/schemas/learners_solo"
              example:
                rows: []

components:
  schemas:
    cohort:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    cohort_learners:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        zoom_logged_in:
          type: string
        iqualify_logged_in:
          type: string
        slack_logged_in:
          type: string
        github_last_commit:
          type: string
    learners:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        current_subject_id:
          type: integer
        cohort_name:
          type: string
        programme_start:
          type: string
        programme:
          type: integer
        zoom_logged_in:
          type: string
        iqualify_logged_in:
          type: string
        slack_logged_in:
          type: string
        github_last_commit:
          type: string
    learners_solo:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        role:
          type: string
        cohort_id:
          type: string
        current_subject_id:
          type: integer
        created_at:
          type: string
        programme:
          type: integer
        name:
          type: string

  # securitySchemes:
  #   dashboard_auth:
  #     type: oauth2
  #     flows:
  #       implicit:
  #         authorizationUrl: https://petstore3.swagger.io/oauth/authorize
  #         scopes:
  #           write:pets: modify pets in your account
  #           read:pets: read your pets
  #   api_key:
  #     type: apiKey
  #     name: api_key
  #     in: header
